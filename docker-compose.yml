volumes:
  postgres_data:
  static_volume:

services:
  db:
    image: postgres:14
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=support_system_db
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build: .
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             python manage.py seed_all &&
             gunicorn --bind 0.0.0.0:8000 support_system.wsgi:application"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - static_volume:/app/staticfiles/
    environment:
      - DB_ENGINE=postgresql
      - DB_NAME=support_system_db
      - DB_USER=admin
      - DB_PASSWORD=admin
      - DB_HOST=db
      - DB_PORT=5432
      - STATIC_ROOT=/app/staticfiles/
      - STATIC_URL=/static/
      - SECRET_KEY="django-insecure-&**q==jwjqna^*w^@rfxy315jd(p41#29j@h2&kjv_l$(bciej"
      - DEBUG=false
      - ENV=prod
      - ALLOWED_HOSTS=localhost,127.0.0.1,web
      - CORS_ALLOWED_ORIGINS=http://localhost:8000,http://localhost:8000

  nginx:
      image: nginx:latest
      ports:
        - "8000:8000"
      volumes:
        - static_volume:/app/staticfiles
        - ./config/nginx.conf:/etc/nginx/nginx.conf
      depends_on:
        - web